// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="command_handler,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.731400,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=157,HLS_SYN_LUT=1060}" *)

module command_handler (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        poke_V_tag_dout,
        poke_V_tag_empty_n,
        poke_V_tag_read,
        poke_V_data_dout,
        poke_V_data_empty_n,
        poke_V_data_read,
        reqs_incoming_V_sector_off_din,
        reqs_incoming_V_sector_off_full_n,
        reqs_incoming_V_sector_off_write,
        reqs_incoming_V_sector_num_din,
        reqs_incoming_V_sector_num_full_n,
        reqs_incoming_V_sector_num_write,
        reqs_incoming_V_tag_din,
        reqs_incoming_V_tag_full_n,
        reqs_incoming_V_tag_write,
        reqs_incoming_V_rw_din,
        reqs_incoming_V_rw_full_n,
        reqs_incoming_V_rw_write,
        kbuf_addrs_V_din,
        kbuf_addrs_V_full_n,
        kbuf_addrs_V_write,
        host_delay_cycle_cnts_V_din,
        host_delay_cycle_cnts_V_full_n,
        host_delay_cycle_cnts_V_write,
        host_throttle_params_V_din,
        host_throttle_params_V_full_n,
        host_throttle_params_V_write,
        device_delay_cycle_cnts_V_din,
        device_delay_cycle_cnts_V_full_n,
        device_delay_cycle_cnts_V_write,
        device_throttle_params_V_din,
        device_throttle_params_V_full_n,
        device_throttle_params_V_write,
        preserver_cheat_signals_V_din,
        preserver_cheat_signals_V_full_n,
        preserver_cheat_signals_V_write,
        app_file_infos_V_din,
        app_file_infos_V_full_n,
        app_file_infos_V_write,
        app_buf_addrs_V_din,
        app_buf_addrs_V_full_n,
        app_buf_addrs_V_write,
        app_free_buf_V_din,
        app_free_buf_V_full_n,
        app_free_buf_V_write,
        app_input_params_V_din,
        app_input_params_V_full_n,
        app_input_params_V_write,
        reset_sigs_V_din,
        reset_sigs_V_full_n,
        reset_sigs_V_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] poke_V_tag_dout;
input   poke_V_tag_empty_n;
output   poke_V_tag_read;
input  [31:0] poke_V_data_dout;
input   poke_V_data_empty_n;
output   poke_V_data_read;
output  [31:0] reqs_incoming_V_sector_off_din;
input   reqs_incoming_V_sector_off_full_n;
output   reqs_incoming_V_sector_off_write;
output  [31:0] reqs_incoming_V_sector_num_din;
input   reqs_incoming_V_sector_num_full_n;
output   reqs_incoming_V_sector_num_write;
output  [31:0] reqs_incoming_V_tag_din;
input   reqs_incoming_V_tag_full_n;
output   reqs_incoming_V_tag_write;
output   reqs_incoming_V_rw_din;
input   reqs_incoming_V_rw_full_n;
output   reqs_incoming_V_rw_write;
output  [31:0] kbuf_addrs_V_din;
input   kbuf_addrs_V_full_n;
output   kbuf_addrs_V_write;
output  [31:0] host_delay_cycle_cnts_V_din;
input   host_delay_cycle_cnts_V_full_n;
output   host_delay_cycle_cnts_V_write;
output  [31:0] host_throttle_params_V_din;
input   host_throttle_params_V_full_n;
output   host_throttle_params_V_write;
output  [31:0] device_delay_cycle_cnts_V_din;
input   device_delay_cycle_cnts_V_full_n;
output   device_delay_cycle_cnts_V_write;
output  [31:0] device_throttle_params_V_din;
input   device_throttle_params_V_full_n;
output   device_throttle_params_V_write;
output   preserver_cheat_signals_V_din;
input   preserver_cheat_signals_V_full_n;
output   preserver_cheat_signals_V_write;
output  [31:0] app_file_infos_V_din;
input   app_file_infos_V_full_n;
output   app_file_infos_V_write;
output  [31:0] app_buf_addrs_V_din;
input   app_buf_addrs_V_full_n;
output   app_buf_addrs_V_write;
output   app_free_buf_V_din;
input   app_free_buf_V_full_n;
output   app_free_buf_V_write;
output  [31:0] app_input_params_V_din;
input   app_input_params_V_full_n;
output   app_input_params_V_write;
output   reset_sigs_V_din;
input   reset_sigs_V_full_n;
output   reset_sigs_V_write;

reg ap_idle;
reg[31:0] reqs_incoming_V_sector_off_din;
reg[31:0] reqs_incoming_V_sector_num_din;
reg[31:0] reqs_incoming_V_tag_din;
reg reqs_incoming_V_rw_din;
reg kbuf_addrs_V_write;
reg host_delay_cycle_cnts_V_write;
reg host_throttle_params_V_write;
reg device_delay_cycle_cnts_V_write;
reg device_throttle_params_V_write;
reg preserver_cheat_signals_V_write;
reg app_file_infos_V_write;
reg app_buf_addrs_V_write;
reg app_free_buf_V_write;
reg app_input_params_V_write;
reg reset_sigs_V_write;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    reqs_incoming_V_sector_off_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_13_reg_890;
reg   [0:0] tmp_14_reg_894;
reg   [0:0] tmp_16_reg_898;
reg    reqs_incoming_V_sector_num_blk_n;
reg    reqs_incoming_V_tag_blk_n;
reg    reqs_incoming_V_rw_blk_n;
reg    kbuf_addrs_V_blk_n;
reg   [0:0] tmp_17_reg_902;
reg    host_delay_cycle_cnts_V_blk_n;
reg   [0:0] tmp_19_reg_906;
reg    host_throttle_params_V_blk_n;
reg   [0:0] tmp_20_reg_910;
reg    device_delay_cycle_cnts_V_blk_n;
reg   [0:0] tmp_21_reg_914;
reg    device_throttle_params_V_blk_n;
reg   [0:0] tmp_23_reg_918;
reg    preserver_cheat_signals_V_blk_n;
reg   [0:0] tmp_25_reg_922;
reg    app_file_infos_V_blk_n;
reg   [0:0] tmp_26_reg_926;
reg    app_buf_addrs_V_blk_n;
reg   [0:0] tmp_27_reg_930;
reg    app_free_buf_V_blk_n;
reg   [0:0] tmp_28_reg_934;
reg    app_input_params_V_blk_n;
reg   [0:0] tmp_29_reg_938;
reg    reset_sigs_V_blk_n;
reg   [0:0] tmp_30_reg_942;
wire   [0:0] empty_n_1_fu_535_p1;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op120_write_state4;
reg    ap_predicate_op122_write_state4;
reg    ap_predicate_op124_write_state4;
reg    ap_predicate_op126_write_state4;
reg    ap_predicate_op128_write_state4;
reg    ap_predicate_op130_write_state4;
reg    ap_predicate_op132_write_state4;
reg    ap_predicate_op134_write_state4;
reg    ap_predicate_op136_write_state4;
reg    ap_predicate_op138_write_state4;
reg    ap_predicate_op140_write_state4;
wire    reqs_incoming_V_rw1_status;
reg    ap_predicate_op151_write_state4;
reg    ap_predicate_op162_write_state4;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] tmp_tag_4_reg_813;
reg   [31:0] ap_reg_pp0_iter1_tmp_tag_4_reg_813;
reg   [31:0] tmp_data_reg_818;
reg   [31:0] ap_reg_pp0_iter1_tmp_data_reg_818;
wire   [2:0] tmp_fu_547_p1;
reg   [2:0] tmp_reg_831;
reg   [2:0] ap_reg_pp0_iter1_tmp_reg_831;
wire   [0:0] icmp_fu_561_p2;
wire   [0:0] icmp3_fu_577_p2;
wire   [0:0] tmp_3_fu_583_p2;
wire   [0:0] tmp_4_fu_589_p2;
wire   [0:0] tmp_5_fu_595_p2;
wire   [0:0] tmp_6_fu_601_p2;
wire   [0:0] tmp_7_fu_607_p2;
wire   [0:0] tmp_8_fu_613_p2;
wire   [0:0] tmp_9_fu_619_p2;
wire   [0:0] tmp_s_fu_625_p2;
wire   [0:0] tmp_10_fu_631_p2;
wire   [0:0] tmp_11_fu_637_p2;
wire   [3:0] p_cast_cast_fu_649_p3;
wire   [0:0] tmp_13_fu_657_p2;
wire   [0:0] tmp_14_fu_663_p2;
wire   [0:0] tmp_16_fu_669_p2;
wire   [0:0] tmp_17_fu_675_p2;
wire   [0:0] tmp_19_fu_681_p2;
wire   [0:0] tmp_20_fu_687_p2;
wire   [0:0] tmp_21_fu_693_p2;
wire   [0:0] tmp_23_fu_699_p2;
wire   [0:0] tmp_25_fu_705_p2;
wire   [0:0] tmp_26_fu_711_p2;
wire   [0:0] tmp_27_fu_717_p2;
wire   [0:0] tmp_28_fu_723_p2;
wire   [0:0] tmp_29_fu_729_p2;
wire   [0:0] tmp_30_fu_735_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [3:0] ap_phi_precharge_reg_pp0_iter0_state_s_reg_458;
reg   [3:0] ap_phi_precharge_reg_pp0_iter1_state_s_reg_458;
reg    poke_V_tag0_update;
wire   [0:0] empty_n_nbread_fu_352_p3_0;
reg    ap_block_pp0_stage0_01001;
reg    reqs_incoming_V_rw1_update;
wire   [31:0] req_sector_off_5_fu_741_p1;
wire   [31:0] req_sector_off_4_fu_775_p1;
wire   [31:0] tmp_sector_num_3_fu_755_p1;
wire   [31:0] tmp_sector_num_1_fu_789_p1;
wire  signed [31:0] tmp_tag_3_fu_770_p1;
wire  signed [31:0] tmp_tag_1_fu_804_p1;
wire   [22:0] tmp_2_fu_551_p4;
wire   [23:0] tmp_15_fu_567_p4;
wire   [0:0] tmp_12_fu_643_p2;
wire   [28:0] grp_fu_517_p4;
wire   [3:0] tmp_18_cast_fu_746_p1;
wire   [3:0] req_sector_num_1_fu_749_p2;
wire   [29:0] grp_fu_526_p4;
wire   [30:0] tmp_19_cast_fu_760_p1;
wire   [30:0] req_tag_1_fu_764_p2;
wire   [3:0] tmp_15_cast_fu_780_p1;
wire   [3:0] req_sector_num_fu_783_p2;
wire   [30:0] tmp_16_cast_fu_794_p1;
wire   [30:0] req_tag_fu_798_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_374;
reg    ap_condition_455;
reg    ap_condition_461;
reg    ap_condition_468;
reg    ap_condition_476;
reg    ap_condition_485;
reg    ap_condition_495;
reg    ap_condition_506;
reg    ap_condition_518;
reg    ap_condition_531;
reg    ap_condition_545;
reg    ap_condition_560;
reg    ap_condition_439;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_439 == 1'b1)) begin
        if ((ap_condition_560 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd12;
        end else if ((ap_condition_545 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd11;
        end else if ((ap_condition_531 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd10;
        end else if ((ap_condition_518 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd9;
        end else if ((ap_condition_506 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd8;
        end else if ((ap_condition_495 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd7;
        end else if ((ap_condition_485 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd6;
        end else if ((ap_condition_476 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd5;
        end else if ((ap_condition_468 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd4;
        end else if ((ap_condition_461 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd3;
        end else if ((ap_condition_455 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd2;
        end else if (((1'd1 == empty_n_1_fu_535_p1) & (1'd0 == icmp_fu_561_p2))) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd1;
        end else if ((1'd0 == empty_n_1_fu_535_p1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= 4'd0;
        end else if ((ap_condition_374 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= p_cast_cast_fu_649_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 <= ap_phi_precharge_reg_pp0_iter0_state_s_reg_458;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_data_reg_818 <= tmp_data_reg_818;
        ap_reg_pp0_iter1_tmp_reg_831 <= tmp_reg_831;
        ap_reg_pp0_iter1_tmp_tag_4_reg_813 <= tmp_tag_4_reg_813;
        tmp_13_reg_890 <= tmp_13_fu_657_p2;
        tmp_data_reg_818 <= poke_V_data_dout;
        tmp_reg_831 <= tmp_fu_547_p1;
        tmp_tag_4_reg_813 <= poke_V_tag_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2))) begin
        tmp_14_reg_894 <= tmp_14_fu_663_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2))) begin
        tmp_16_reg_898 <= tmp_16_fu_669_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2))) begin
        tmp_17_reg_902 <= tmp_17_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2))) begin
        tmp_19_reg_906 <= tmp_19_fu_681_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2))) begin
        tmp_20_reg_910 <= tmp_20_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2))) begin
        tmp_21_reg_914 <= tmp_21_fu_693_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2) & (1'd0 == tmp_21_fu_693_p2))) begin
        tmp_23_reg_918 <= tmp_23_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2) & (1'd0 == tmp_21_fu_693_p2) & (1'd0 == tmp_23_fu_699_p2))) begin
        tmp_25_reg_922 <= tmp_25_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2) & (1'd0 == tmp_21_fu_693_p2) & (1'd0 == tmp_23_fu_699_p2) & (1'd0 == tmp_25_fu_705_p2))) begin
        tmp_26_reg_926 <= tmp_26_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2) & (1'd0 == tmp_21_fu_693_p2) & (1'd0 == tmp_23_fu_699_p2) & (1'd0 == tmp_25_fu_705_p2) & (1'd0 == tmp_26_fu_711_p2))) begin
        tmp_27_reg_930 <= tmp_27_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2) & (1'd0 == tmp_21_fu_693_p2) & (1'd0 == tmp_23_fu_699_p2) & (1'd0 == tmp_25_fu_705_p2) & (1'd0 == tmp_26_fu_711_p2) & (1'd0 == tmp_27_fu_717_p2))) begin
        tmp_28_reg_934 <= tmp_28_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2) & (1'd0 == tmp_21_fu_693_p2) & (1'd0 == tmp_23_fu_699_p2) & (1'd0 == tmp_25_fu_705_p2) & (1'd0 == tmp_26_fu_711_p2) & (1'd0 == tmp_27_fu_717_p2) & (1'd0 == tmp_28_fu_723_p2))) begin
        tmp_29_reg_938 <= tmp_29_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_13_fu_657_p2) & (1'd0 == tmp_14_fu_663_p2) & (1'd0 == tmp_16_fu_669_p2) & (1'd0 == tmp_17_fu_675_p2) & (1'd0 == tmp_19_fu_681_p2) & (1'd0 == tmp_20_fu_687_p2) & (1'd0 == tmp_21_fu_693_p2) & (1'd0 == tmp_23_fu_699_p2) & (1'd0 == tmp_25_fu_705_p2) & (1'd0 == tmp_26_fu_711_p2) & (1'd0 == tmp_27_fu_717_p2) & (1'd0 == tmp_28_fu_723_p2) & (1'd0 == tmp_29_fu_729_p2))) begin
        tmp_30_reg_942 <= tmp_30_fu_735_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd1 == tmp_27_reg_930))) begin
        app_buf_addrs_V_blk_n = app_buf_addrs_V_full_n;
    end else begin
        app_buf_addrs_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op126_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        app_buf_addrs_V_write = 1'b1;
    end else begin
        app_buf_addrs_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd1 == tmp_26_reg_926))) begin
        app_file_infos_V_blk_n = app_file_infos_V_full_n;
    end else begin
        app_file_infos_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op128_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        app_file_infos_V_write = 1'b1;
    end else begin
        app_file_infos_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd0 == tmp_27_reg_930) & (1'd1 == tmp_28_reg_934))) begin
        app_free_buf_V_blk_n = app_free_buf_V_full_n;
    end else begin
        app_free_buf_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op124_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        app_free_buf_V_write = 1'b1;
    end else begin
        app_free_buf_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd0 == tmp_27_reg_930) & (1'd0 == tmp_28_reg_934) & (1'd1 == tmp_29_reg_938))) begin
        app_input_params_V_blk_n = app_input_params_V_full_n;
    end else begin
        app_input_params_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op122_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        app_input_params_V_write = 1'b1;
    end else begin
        app_input_params_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd1 == tmp_21_reg_914))) begin
        device_delay_cycle_cnts_V_blk_n = device_delay_cycle_cnts_V_full_n;
    end else begin
        device_delay_cycle_cnts_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op134_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        device_delay_cycle_cnts_V_write = 1'b1;
    end else begin
        device_delay_cycle_cnts_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd1 == tmp_23_reg_918))) begin
        device_throttle_params_V_blk_n = device_throttle_params_V_full_n;
    end else begin
        device_throttle_params_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op132_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        device_throttle_params_V_write = 1'b1;
    end else begin
        device_throttle_params_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd1 == tmp_19_reg_906))) begin
        host_delay_cycle_cnts_V_blk_n = host_delay_cycle_cnts_V_full_n;
    end else begin
        host_delay_cycle_cnts_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op138_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        host_delay_cycle_cnts_V_write = 1'b1;
    end else begin
        host_delay_cycle_cnts_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd1 == tmp_20_reg_910))) begin
        host_throttle_params_V_blk_n = host_throttle_params_V_full_n;
    end else begin
        host_throttle_params_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op136_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        host_throttle_params_V_write = 1'b1;
    end else begin
        host_throttle_params_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd1 == tmp_17_reg_902))) begin
        kbuf_addrs_V_blk_n = kbuf_addrs_V_full_n;
    end else begin
        kbuf_addrs_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op140_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        kbuf_addrs_V_write = 1'b1;
    end else begin
        kbuf_addrs_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == (poke_V_tag_empty_n & poke_V_data_empty_n)))) begin
        poke_V_tag0_update = 1'b1;
    end else begin
        poke_V_tag0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd1 == tmp_25_reg_922))) begin
        preserver_cheat_signals_V_blk_n = preserver_cheat_signals_V_full_n;
    end else begin
        preserver_cheat_signals_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op130_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        preserver_cheat_signals_V_write = 1'b1;
    end else begin
        preserver_cheat_signals_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op151_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op162_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0)))) begin
        reqs_incoming_V_rw1_update = 1'b1;
    end else begin
        reqs_incoming_V_rw1_update = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (tmp_14_reg_894 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd1 == tmp_16_reg_898)))) begin
        reqs_incoming_V_rw_blk_n = reqs_incoming_V_rw_full_n;
    end else begin
        reqs_incoming_V_rw_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_01001 == 1'b0))) begin
        if ((1'b1 == ap_predicate_op162_write_state4)) begin
            reqs_incoming_V_rw_din = 1'd1;
        end else if ((1'b1 == ap_predicate_op151_write_state4)) begin
            reqs_incoming_V_rw_din = 1'd0;
        end else begin
            reqs_incoming_V_rw_din = 'bx;
        end
    end else begin
        reqs_incoming_V_rw_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (tmp_14_reg_894 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd1 == tmp_16_reg_898)))) begin
        reqs_incoming_V_sector_num_blk_n = reqs_incoming_V_sector_num_full_n;
    end else begin
        reqs_incoming_V_sector_num_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_01001 == 1'b0))) begin
        if ((1'b1 == ap_predicate_op162_write_state4)) begin
            reqs_incoming_V_sector_num_din = tmp_sector_num_1_fu_789_p1;
        end else if ((1'b1 == ap_predicate_op151_write_state4)) begin
            reqs_incoming_V_sector_num_din = tmp_sector_num_3_fu_755_p1;
        end else begin
            reqs_incoming_V_sector_num_din = 'bx;
        end
    end else begin
        reqs_incoming_V_sector_num_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (tmp_14_reg_894 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd1 == tmp_16_reg_898)))) begin
        reqs_incoming_V_sector_off_blk_n = reqs_incoming_V_sector_off_full_n;
    end else begin
        reqs_incoming_V_sector_off_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_01001 == 1'b0))) begin
        if ((1'b1 == ap_predicate_op162_write_state4)) begin
            reqs_incoming_V_sector_off_din = req_sector_off_4_fu_775_p1;
        end else if ((1'b1 == ap_predicate_op151_write_state4)) begin
            reqs_incoming_V_sector_off_din = req_sector_off_5_fu_741_p1;
        end else begin
            reqs_incoming_V_sector_off_din = 'bx;
        end
    end else begin
        reqs_incoming_V_sector_off_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (tmp_14_reg_894 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd1 == tmp_16_reg_898)))) begin
        reqs_incoming_V_tag_blk_n = reqs_incoming_V_tag_full_n;
    end else begin
        reqs_incoming_V_tag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0_01001 == 1'b0))) begin
        if ((1'b1 == ap_predicate_op162_write_state4)) begin
            reqs_incoming_V_tag_din = tmp_tag_1_fu_804_p1;
        end else if ((1'b1 == ap_predicate_op151_write_state4)) begin
            reqs_incoming_V_tag_din = tmp_tag_3_fu_770_p1;
        end else begin
            reqs_incoming_V_tag_din = 'bx;
        end
    end else begin
        reqs_incoming_V_tag_din = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (ap_block_pp0_stage0 == 1'b0) & (tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd0 == tmp_27_reg_930) & (1'd0 == tmp_28_reg_934) & (1'd0 == tmp_29_reg_938) & (1'd1 == tmp_30_reg_942))) begin
        reset_sigs_V_blk_n = reset_sigs_V_full_n;
    end else begin
        reset_sigs_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'b1 == ap_predicate_op120_write_state4) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        reset_sigs_V_write = 1'b1;
    end else begin
        reset_sigs_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == ap_enable_reg_pp0_iter2) & (((1'b0 == reset_sigs_V_full_n) & (1'b1 == ap_predicate_op120_write_state4)) | ((1'b0 == app_input_params_V_full_n) & (1'b1 == ap_predicate_op122_write_state4)) | ((1'b0 == app_free_buf_V_full_n) & (1'b1 == ap_predicate_op124_write_state4)) | ((1'b0 == app_buf_addrs_V_full_n) & (1'b1 == ap_predicate_op126_write_state4)) | ((1'b0 == app_file_infos_V_full_n) & (1'b1 == ap_predicate_op128_write_state4)) | ((1'b0 == preserver_cheat_signals_V_full_n) & (1'b1 == ap_predicate_op130_write_state4)) | ((1'b0 == device_throttle_params_V_full_n) & (1'b1 == ap_predicate_op132_write_state4)) | ((1'b0 == device_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op134_write_state4)) | ((1'b0 == host_throttle_params_V_full_n) & (1'b1 == ap_predicate_op136_write_state4)) | ((1'b0 == host_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op138_write_state4)) | ((1'b0 == kbuf_addrs_V_full_n) & (1'b1 == ap_predicate_op140_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op151_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op162_write_state4))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_enable_reg_pp0_iter2) & (((1'b0 == reset_sigs_V_full_n) & (1'b1 == ap_predicate_op120_write_state4)) | ((1'b0 == app_input_params_V_full_n) & (1'b1 == ap_predicate_op122_write_state4)) | ((1'b0 == app_free_buf_V_full_n) & (1'b1 == ap_predicate_op124_write_state4)) | ((1'b0 == app_buf_addrs_V_full_n) & (1'b1 == ap_predicate_op126_write_state4)) | ((1'b0 == app_file_infos_V_full_n) & (1'b1 == ap_predicate_op128_write_state4)) | ((1'b0 == preserver_cheat_signals_V_full_n) & (1'b1 == ap_predicate_op130_write_state4)) | ((1'b0 == device_throttle_params_V_full_n) & (1'b1 == ap_predicate_op132_write_state4)) | ((1'b0 == device_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op134_write_state4)) | ((1'b0 == host_throttle_params_V_full_n) & (1'b1 == ap_predicate_op136_write_state4)) | ((1'b0 == host_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op138_write_state4)) | ((1'b0 == kbuf_addrs_V_full_n) & (1'b1 == ap_predicate_op140_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op151_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op162_write_state4))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_enable_reg_pp0_iter2) & (((1'b0 == reset_sigs_V_full_n) & (1'b1 == ap_predicate_op120_write_state4)) | ((1'b0 == app_input_params_V_full_n) & (1'b1 == ap_predicate_op122_write_state4)) | ((1'b0 == app_free_buf_V_full_n) & (1'b1 == ap_predicate_op124_write_state4)) | ((1'b0 == app_buf_addrs_V_full_n) & (1'b1 == ap_predicate_op126_write_state4)) | ((1'b0 == app_file_infos_V_full_n) & (1'b1 == ap_predicate_op128_write_state4)) | ((1'b0 == preserver_cheat_signals_V_full_n) & (1'b1 == ap_predicate_op130_write_state4)) | ((1'b0 == device_throttle_params_V_full_n) & (1'b1 == ap_predicate_op132_write_state4)) | ((1'b0 == device_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op134_write_state4)) | ((1'b0 == host_throttle_params_V_full_n) & (1'b1 == ap_predicate_op136_write_state4)) | ((1'b0 == host_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op138_write_state4)) | ((1'b0 == kbuf_addrs_V_full_n) & (1'b1 == ap_predicate_op140_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op151_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op162_write_state4))));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (((1'b0 == reset_sigs_V_full_n) & (1'b1 == ap_predicate_op120_write_state4)) | ((1'b0 == app_input_params_V_full_n) & (1'b1 == ap_predicate_op122_write_state4)) | ((1'b0 == app_free_buf_V_full_n) & (1'b1 == ap_predicate_op124_write_state4)) | ((1'b0 == app_buf_addrs_V_full_n) & (1'b1 == ap_predicate_op126_write_state4)) | ((1'b0 == app_file_infos_V_full_n) & (1'b1 == ap_predicate_op128_write_state4)) | ((1'b0 == preserver_cheat_signals_V_full_n) & (1'b1 == ap_predicate_op130_write_state4)) | ((1'b0 == device_throttle_params_V_full_n) & (1'b1 == ap_predicate_op132_write_state4)) | ((1'b0 == device_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op134_write_state4)) | ((1'b0 == host_throttle_params_V_full_n) & (1'b1 == ap_predicate_op136_write_state4)) | ((1'b0 == host_delay_cycle_cnts_V_full_n) & (1'b1 == ap_predicate_op138_write_state4)) | ((1'b0 == kbuf_addrs_V_full_n) & (1'b1 == ap_predicate_op140_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op151_write_state4)) | ((1'b0 == reqs_incoming_V_rw1_status) & (1'b1 == ap_predicate_op162_write_state4)));
end

always @ (*) begin
    ap_condition_374 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd0 == tmp_6_fu_601_p2) & (1'd0 == tmp_7_fu_607_p2) & (1'd0 == tmp_8_fu_613_p2) & (1'd0 == tmp_9_fu_619_p2) & (1'd0 == tmp_s_fu_625_p2) & (1'd0 == tmp_10_fu_631_p2) & (1'd0 == tmp_11_fu_637_p2));
end

always @ (*) begin
    ap_condition_439 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_condition_455 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd0 == icmp3_fu_577_p2));
end

always @ (*) begin
    ap_condition_461 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd1 == tmp_3_fu_583_p2));
end

always @ (*) begin
    ap_condition_468 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd1 == tmp_4_fu_589_p2));
end

always @ (*) begin
    ap_condition_476 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd1 == tmp_5_fu_595_p2));
end

always @ (*) begin
    ap_condition_485 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd1 == tmp_6_fu_601_p2));
end

always @ (*) begin
    ap_condition_495 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd0 == tmp_6_fu_601_p2) & (1'd1 == tmp_7_fu_607_p2));
end

always @ (*) begin
    ap_condition_506 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd0 == tmp_6_fu_601_p2) & (1'd0 == tmp_7_fu_607_p2) & (1'd1 == tmp_8_fu_613_p2));
end

always @ (*) begin
    ap_condition_518 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd0 == tmp_6_fu_601_p2) & (1'd0 == tmp_7_fu_607_p2) & (1'd0 == tmp_8_fu_613_p2) & (1'd1 == tmp_9_fu_619_p2));
end

always @ (*) begin
    ap_condition_531 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd0 == tmp_6_fu_601_p2) & (1'd0 == tmp_7_fu_607_p2) & (1'd0 == tmp_8_fu_613_p2) & (1'd0 == tmp_9_fu_619_p2) & (1'd1 == tmp_s_fu_625_p2));
end

always @ (*) begin
    ap_condition_545 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd0 == tmp_6_fu_601_p2) & (1'd0 == tmp_7_fu_607_p2) & (1'd0 == tmp_8_fu_613_p2) & (1'd0 == tmp_9_fu_619_p2) & (1'd0 == tmp_s_fu_625_p2) & (1'd1 == tmp_10_fu_631_p2));
end

always @ (*) begin
    ap_condition_560 = ((1'd1 == empty_n_1_fu_535_p1) & (1'd1 == icmp_fu_561_p2) & (1'd1 == icmp3_fu_577_p2) & (1'd0 == tmp_3_fu_583_p2) & (1'd0 == tmp_4_fu_589_p2) & (1'd0 == tmp_5_fu_595_p2) & (1'd0 == tmp_6_fu_601_p2) & (1'd0 == tmp_7_fu_607_p2) & (1'd0 == tmp_8_fu_613_p2) & (1'd0 == tmp_9_fu_619_p2) & (1'd0 == tmp_s_fu_625_p2) & (1'd0 == tmp_10_fu_631_p2) & (1'd1 == tmp_11_fu_637_p2));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_precharge_reg_pp0_iter0_state_s_reg_458 = 'bx;

always @ (*) begin
    ap_predicate_op120_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd0 == tmp_27_reg_930) & (1'd0 == tmp_28_reg_934) & (1'd0 == tmp_29_reg_938) & (1'd1 == tmp_30_reg_942));
end

always @ (*) begin
    ap_predicate_op122_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd0 == tmp_27_reg_930) & (1'd0 == tmp_28_reg_934) & (1'd1 == tmp_29_reg_938));
end

always @ (*) begin
    ap_predicate_op124_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd0 == tmp_27_reg_930) & (1'd1 == tmp_28_reg_934));
end

always @ (*) begin
    ap_predicate_op126_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd0 == tmp_26_reg_926) & (1'd1 == tmp_27_reg_930));
end

always @ (*) begin
    ap_predicate_op128_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd0 == tmp_25_reg_922) & (1'd1 == tmp_26_reg_926));
end

always @ (*) begin
    ap_predicate_op130_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd0 == tmp_23_reg_918) & (1'd1 == tmp_25_reg_922));
end

always @ (*) begin
    ap_predicate_op132_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd0 == tmp_21_reg_914) & (1'd1 == tmp_23_reg_918));
end

always @ (*) begin
    ap_predicate_op134_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd0 == tmp_20_reg_910) & (1'd1 == tmp_21_reg_914));
end

always @ (*) begin
    ap_predicate_op136_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd0 == tmp_19_reg_906) & (1'd1 == tmp_20_reg_910));
end

always @ (*) begin
    ap_predicate_op138_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd0 == tmp_17_reg_902) & (1'd1 == tmp_19_reg_906));
end

always @ (*) begin
    ap_predicate_op140_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd0 == tmp_16_reg_898) & (1'd1 == tmp_17_reg_902));
end

always @ (*) begin
    ap_predicate_op151_write_state4 = ((tmp_13_reg_890 == 1'd0) & (1'd0 == tmp_14_reg_894) & (1'd1 == tmp_16_reg_898));
end

always @ (*) begin
    ap_predicate_op162_write_state4 = ((tmp_13_reg_890 == 1'd0) & (tmp_14_reg_894 == 1'd1));
end

assign ap_ready = 1'b0;

assign app_buf_addrs_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign app_file_infos_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign app_free_buf_V_din = 1'd0;

assign app_input_params_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign device_delay_cycle_cnts_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign device_throttle_params_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign empty_n_1_fu_535_p1 = empty_n_nbread_fu_352_p3_0;

assign empty_n_nbread_fu_352_p3_0 = (poke_V_tag_empty_n & poke_V_data_empty_n);

assign grp_fu_517_p4 = {{ap_reg_pp0_iter1_tmp_data_reg_818[31:3]}};

assign grp_fu_526_p4 = {{ap_reg_pp0_iter1_tmp_tag_4_reg_813[31:2]}};

assign host_delay_cycle_cnts_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign host_throttle_params_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign icmp3_fu_577_p2 = ((tmp_15_fu_567_p4 == 24'd0) ? 1'b1 : 1'b0);

assign icmp_fu_561_p2 = ((tmp_2_fu_551_p4 == 23'd0) ? 1'b1 : 1'b0);

assign kbuf_addrs_V_din = ap_reg_pp0_iter1_tmp_data_reg_818;

assign p_cast_cast_fu_649_p3 = ((tmp_12_fu_643_p2[0:0] === 1'b1) ? 4'd13 : 4'd0);

assign poke_V_data_read = poke_V_tag0_update;

assign poke_V_tag_read = poke_V_tag0_update;

assign preserver_cheat_signals_V_din = 1'd0;

assign req_sector_num_1_fu_749_p2 = (tmp_18_cast_fu_746_p1 + 4'd1);

assign req_sector_num_fu_783_p2 = (tmp_15_cast_fu_780_p1 + 4'd1);

assign req_sector_off_4_fu_775_p1 = grp_fu_517_p4;

assign req_sector_off_5_fu_741_p1 = grp_fu_517_p4;

assign req_tag_1_fu_764_p2 = ($signed(tmp_19_cast_fu_760_p1) + $signed(31'd2147483584));

assign req_tag_fu_798_p2 = ($signed(tmp_16_cast_fu_794_p1) + $signed(31'd2147483520));

assign reqs_incoming_V_rw1_status = (reqs_incoming_V_sector_off_full_n & reqs_incoming_V_sector_num_full_n & reqs_incoming_V_tag_full_n & reqs_incoming_V_rw_full_n);

assign reqs_incoming_V_rw_write = reqs_incoming_V_rw1_update;

assign reqs_incoming_V_sector_num_write = reqs_incoming_V_rw1_update;

assign reqs_incoming_V_sector_off_write = reqs_incoming_V_rw1_update;

assign reqs_incoming_V_tag_write = reqs_incoming_V_rw1_update;

assign reset_sigs_V_din = 1'd0;

assign tmp_10_fu_631_p2 = ((poke_V_tag_dout == 32'd48) ? 1'b1 : 1'b0);

assign tmp_11_fu_637_p2 = ((poke_V_tag_dout == 32'd52) ? 1'b1 : 1'b0);

assign tmp_12_fu_643_p2 = ((poke_V_tag_dout == 32'd56) ? 1'b1 : 1'b0);

assign tmp_13_fu_657_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd0) ? 1'b1 : 1'b0);

assign tmp_14_fu_663_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd1) ? 1'b1 : 1'b0);

assign tmp_15_cast_fu_780_p1 = ap_reg_pp0_iter1_tmp_reg_831;

assign tmp_15_fu_567_p4 = {{poke_V_tag_dout[31:8]}};

assign tmp_16_cast_fu_794_p1 = grp_fu_526_p4;

assign tmp_16_fu_669_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd2) ? 1'b1 : 1'b0);

assign tmp_17_fu_675_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd3) ? 1'b1 : 1'b0);

assign tmp_18_cast_fu_746_p1 = ap_reg_pp0_iter1_tmp_reg_831;

assign tmp_19_cast_fu_760_p1 = grp_fu_526_p4;

assign tmp_19_fu_681_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd4) ? 1'b1 : 1'b0);

assign tmp_20_fu_687_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd5) ? 1'b1 : 1'b0);

assign tmp_21_fu_693_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd6) ? 1'b1 : 1'b0);

assign tmp_23_fu_699_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd7) ? 1'b1 : 1'b0);

assign tmp_25_fu_705_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd8) ? 1'b1 : 1'b0);

assign tmp_26_fu_711_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd9) ? 1'b1 : 1'b0);

assign tmp_27_fu_717_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_28_fu_723_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd11) ? 1'b1 : 1'b0);

assign tmp_29_fu_729_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd12) ? 1'b1 : 1'b0);

assign tmp_2_fu_551_p4 = {{poke_V_tag_dout[31:9]}};

assign tmp_30_fu_735_p2 = ((ap_phi_precharge_reg_pp0_iter1_state_s_reg_458 == 4'd13) ? 1'b1 : 1'b0);

assign tmp_3_fu_583_p2 = ((poke_V_tag_dout == 32'd16) ? 1'b1 : 1'b0);

assign tmp_4_fu_589_p2 = ((poke_V_tag_dout == 32'd20) ? 1'b1 : 1'b0);

assign tmp_5_fu_595_p2 = ((poke_V_tag_dout == 32'd24) ? 1'b1 : 1'b0);

assign tmp_6_fu_601_p2 = ((poke_V_tag_dout == 32'd28) ? 1'b1 : 1'b0);

assign tmp_7_fu_607_p2 = ((poke_V_tag_dout == 32'd32) ? 1'b1 : 1'b0);

assign tmp_8_fu_613_p2 = ((poke_V_tag_dout == 32'd36) ? 1'b1 : 1'b0);

assign tmp_9_fu_619_p2 = ((poke_V_tag_dout == 32'd40) ? 1'b1 : 1'b0);

assign tmp_fu_547_p1 = poke_V_data_dout[2:0];

assign tmp_s_fu_625_p2 = ((poke_V_tag_dout == 32'd44) ? 1'b1 : 1'b0);

assign tmp_sector_num_1_fu_789_p1 = req_sector_num_fu_783_p2;

assign tmp_sector_num_3_fu_755_p1 = req_sector_num_1_fu_749_p2;

assign tmp_tag_1_fu_804_p1 = $signed(req_tag_fu_798_p2);

assign tmp_tag_3_fu_770_p1 = $signed(req_tag_1_fu_764_p2);

endmodule //command_handler
