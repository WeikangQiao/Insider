// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dram_helper_app,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.086000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=782,HLS_SYN_LUT=957}" *)

module dram_helper_app (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        app_file_infos_V_dout,
        app_file_infos_V_empty_n,
        app_file_infos_V_read,
        device_dram_read_req_V_num_din,
        device_dram_read_req_V_num_full_n,
        device_dram_read_req_V_num_write,
        device_dram_read_req_V_addr_din,
        device_dram_read_req_V_addr_full_n,
        device_dram_read_req_V_addr_write,
        device_dram_read_resp_V_last_dout,
        device_dram_read_resp_V_last_empty_n,
        device_dram_read_resp_V_last_read,
        device_dram_read_resp_V_data_V_dout,
        device_dram_read_resp_V_data_V_empty_n,
        device_dram_read_resp_V_data_V_read,
        app_input_data_V_data_V_din,
        app_input_data_V_data_V_full_n,
        app_input_data_V_data_V_write,
        app_input_data_V_len_din,
        app_input_data_V_len_full_n,
        app_input_data_V_len_write,
        app_input_data_V_eop_din,
        app_input_data_V_eop_full_n,
        app_input_data_V_eop_write,
        reset_dram_helper_app_V_dout,
        reset_dram_helper_app_V_empty_n,
        reset_dram_helper_app_V_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] app_file_infos_V_dout;
input   app_file_infos_V_empty_n;
output   app_file_infos_V_read;
output  [7:0] device_dram_read_req_V_num_din;
input   device_dram_read_req_V_num_full_n;
output   device_dram_read_req_V_num_write;
output  [63:0] device_dram_read_req_V_addr_din;
input   device_dram_read_req_V_addr_full_n;
output   device_dram_read_req_V_addr_write;
input   device_dram_read_resp_V_last_dout;
input   device_dram_read_resp_V_last_empty_n;
output   device_dram_read_resp_V_last_read;
input  [511:0] device_dram_read_resp_V_data_V_dout;
input   device_dram_read_resp_V_data_V_empty_n;
output   device_dram_read_resp_V_data_V_read;
output  [511:0] app_input_data_V_data_V_din;
input   app_input_data_V_data_V_full_n;
output   app_input_data_V_data_V_write;
output  [15:0] app_input_data_V_len_din;
input   app_input_data_V_len_full_n;
output   app_input_data_V_len_write;
output   app_input_data_V_eop_din;
input   app_input_data_V_eop_full_n;
output   app_input_data_V_eop_write;
input   reset_dram_helper_app_V_dout;
input   reset_dram_helper_app_V_empty_n;
output   reset_dram_helper_app_V_read;

reg ap_idle;
reg app_file_infos_V_read;
reg reset_dram_helper_app_V_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    app_input_data_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] reset_reg_293;
reg   [0:0] empty_n_4_reg_854;
reg   [0:0] state_reg_281;
reg   [0:0] empty_n_3_reg_881;
reg    app_input_data_V_len_blk_n;
reg    app_input_data_V_eop_blk_n;
wire   [0:0] empty_n_4_fu_407_p1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    app_input_data_V_len1_status;
reg    ap_predicate_op136_write_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] reset_phi_fu_297_p4;
wire   [0:0] empty_n_fu_411_p1;
reg   [0:0] empty_n_reg_859;
reg   [0:0] state_phi_fu_285_p4;
wire   [0:0] tmp_9_fu_429_p2;
reg   [0:0] tmp_9_reg_863;
wire   [0:0] tmp_10_fu_435_p2;
reg   [0:0] tmp_10_reg_867;
wire   [0:0] tmp_12_fu_441_p2;
reg   [0:0] tmp_12_reg_871;
wire   [0:0] empty_n_3_fu_642_p1;
reg   [511:0] tmp_data_V_reg_885;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] state_8_phi_fu_321_p16;
reg   [0:0] reset_3_phi_fu_352_p16;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_reset_1_reg_305;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_reset_1_reg_305;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_state_8_reg_315;
wire   [0:0] brmerge_fu_683_p2;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_state_8_reg_315;
wire   [0:0] p_reset_1_fu_769_p2;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_reset_3_reg_347;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_reset_3_reg_347;
reg    device_dram_read_req_V_num1_update;
wire   [0:0] tmp_5_fu_510_p2;
wire   [0:0] full_n_nbwrite_fu_250_p5;
reg    ap_block_pp0_stage0_01001;
reg    device_dram_read_resp_V_last0_update;
wire   [0:0] grp_nbread_fu_260_p3_0;
reg    app_input_data_V_len1_update;
wire   [15:0] tmp_len_1_fu_716_p3;
reg   [31:0] reset_cnt_fu_202;
wire   [31:0] p_s_fu_776_p3;
reg   [63:0] length_left_fu_206;
wire   [63:0] length_left_2_fu_462_p1;
wire   [63:0] length_left_1_fu_618_p1;
reg   [35:0] l_addr_V_1_fu_210;
wire   [35:0] l_addr_V_fu_494_p3;
wire   [35:0] next_l_addr_V_fu_606_p2;
reg   [15:0] tmp_len_fu_214;
reg   [0:0] finish_issuing_fu_218;
wire   [0:0] finish_issuing_1_fu_584_p2;
reg   [31:0] num_issued_fu_222;
wire   [31:0] next_num_issued_fu_612_p2;
reg   [36:0] length_V_1_fu_226;
wire   [36:0] r_V_fu_454_p3;
wire   [36:0] length_V_fu_476_p1;
reg   [31:0] num_read_fu_230;
wire   [31:0] num_read_1_fu_665_p2;
reg   [31:0] read_info_cnt_fu_234;
wire   [31:0] read_info_cnt_1_fu_422_p2;
wire   [4:0] tmp_13_fu_450_p1;
wire   [23:0] tmp_2_fu_490_p1;
wire   [36:0] tmp_fu_533_p1;
wire   [13:0] tmp_1_fu_543_p1;
wire   [13:0] tmp_3_fu_547_p2;
wire   [0:0] tmp_7_fu_527_p2;
wire   [6:0] read_req_num_cast_fu_553_p4;
wire   [6:0] tmp_num_fu_563_p3;
wire   [36:0] next_length_left_V_fu_537_p2;
wire   [12:0] i_op_assign_fu_594_p3;
wire   [35:0] tmp_s_fu_602_p1;
wire   [31:0] tmp_8_fu_590_p1;
wire   [36:0] p_2_fu_576_p3;
wire   [0:0] p_not_fu_671_p2;
wire   [0:0] finish_issuing_6_not_fu_677_p2;
wire   [5:0] app_data_len_fu_690_p1;
wire   [0:0] tmp_11_fu_698_p2;
wire   [6:0] app_data_len_cast_fu_694_p1;
wire   [6:0] p_app_data_len_fu_704_p3;
wire   [15:0] p_app_data_len_cast_fu_712_p1;
wire   [0:0] p_not_not_fu_725_p2;
wire   [31:0] reset_cnt_1_fu_751_p2;
wire   [0:0] tmp_4_fu_757_p2;
wire   [0:0] not_s_fu_763_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_154;
reg    ap_condition_533;
reg    ap_condition_537;
reg    ap_condition_531;
reg    ap_condition_471;
reg    ap_condition_547;
reg    ap_condition_84;
reg    ap_condition_71;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_154 == 1'b1)) begin
        if (((1'd0 == reset_phi_fu_297_p4) & (1'd1 == empty_n_4_fu_407_p1))) begin
            ap_phi_precharge_reg_pp0_iter1_reset_1_reg_305 <= reset_dram_helper_app_V_empty_n;
        end else if ((1'd1 == reset_phi_fu_297_p4)) begin
            ap_phi_precharge_reg_pp0_iter1_reset_1_reg_305 <= reset_phi_fu_297_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_reset_1_reg_305 <= ap_phi_precharge_reg_pp0_iter0_reset_1_reg_305;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd1 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == empty_n_3_fu_642_p1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_9_fu_429_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_10_fu_435_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_12_fu_441_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_12_fu_441_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == empty_n_fu_411_p1)))) begin
        ap_phi_precharge_reg_pp0_iter1_reset_3_reg_347 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        ap_phi_precharge_reg_pp0_iter1_reset_3_reg_347 <= ap_phi_precharge_reg_pp0_iter0_reset_3_reg_347;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_9_fu_429_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_10_fu_435_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_12_fu_441_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == empty_n_fu_411_p1)))) begin
        ap_phi_precharge_reg_pp0_iter1_state_8_reg_315 <= 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd1 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == empty_n_3_fu_642_p1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_12_fu_441_p2)))) begin
        ap_phi_precharge_reg_pp0_iter1_state_8_reg_315 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        ap_phi_precharge_reg_pp0_iter1_state_8_reg_315 <= ap_phi_precharge_reg_pp0_iter0_state_8_reg_315;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd1 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_5_fu_510_p2) & (1'd1 == full_n_nbwrite_fu_250_p5))) begin
        finish_issuing_fu_218 <= finish_issuing_1_fu_584_p2;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_12_fu_441_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & ((1'd1 == reset_phi_fu_297_p4) | (1'd1 == empty_n_4_fu_407_p1))))) begin
        finish_issuing_fu_218 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_531 == 1'b1)) begin
        if ((ap_condition_537 == 1'b1)) begin
            l_addr_V_1_fu_210 <= next_l_addr_V_fu_606_p2;
        end else if ((ap_condition_533 == 1'b1)) begin
            l_addr_V_1_fu_210 <= l_addr_V_fu_494_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_471 == 1'b1)) begin
        if ((1'd1 == tmp_10_fu_435_p2)) begin
            length_V_1_fu_226 <= length_V_fu_476_p1;
        end else if (((1'd0 == tmp_10_fu_435_p2) & (1'd1 == tmp_12_fu_441_p2))) begin
            length_V_1_fu_226 <= r_V_fu_454_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_531 == 1'b1)) begin
        if ((ap_condition_537 == 1'b1)) begin
                        length_left_fu_206[36 : 0] <= length_left_1_fu_618_p1[36 : 0];
        end else if ((ap_condition_547 == 1'b1)) begin
                        length_left_fu_206[36 : 0] <= length_left_2_fu_462_p1[36 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd1 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_5_fu_510_p2) & (1'd1 == full_n_nbwrite_fu_250_p5))) begin
        num_issued_fu_222 <= next_num_issued_fu_612_p2;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_12_fu_441_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & ((1'd1 == reset_phi_fu_297_p4) | (1'd1 == empty_n_4_fu_407_p1))))) begin
        num_issued_fu_222 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op136_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        num_read_fu_230 <= num_read_1_fu_665_p2;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & ((reset_reg_293 == 1'd1) | (empty_n_4_reg_854 == 1'd1))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (reset_reg_293 == 1'd0) & (1'd0 == empty_n_4_reg_854) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == state_reg_281) & (1'd1 == empty_n_reg_859) & (1'd0 == tmp_9_reg_863) & (1'd0 == tmp_10_reg_867) & (1'd1 == tmp_12_reg_871)))) begin
        num_read_fu_230 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_10_fu_435_p2))) begin
        read_info_cnt_fu_234 <= 32'd2;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_9_fu_429_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_12_fu_441_p2)))) begin
        read_info_cnt_fu_234 <= read_info_cnt_1_fu_422_p2;
    end else if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_12_fu_441_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & ((1'd1 == reset_phi_fu_297_p4) | (1'd1 == empty_n_4_fu_407_p1))))) begin
        read_info_cnt_fu_234 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0) & ((reset_reg_293 == 1'd1) | (empty_n_4_reg_854 == 1'd1)))) begin
        reset_cnt_fu_202 <= p_s_fu_776_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reset_cnt_fu_202 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        reset_reg_293 <= reset_3_phi_fu_352_p16;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reset_reg_293 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        state_reg_281 <= state_8_phi_fu_321_p16;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        state_reg_281 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd1 == state_phi_fu_285_p4))) begin
        empty_n_3_reg_881 <= grp_nbread_fu_260_p3_0;
        tmp_data_V_reg_885 <= device_dram_read_resp_V_data_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4))) begin
        empty_n_4_reg_854 <= reset_dram_helper_app_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4))) begin
        empty_n_reg_859 <= app_file_infos_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2))) begin
        tmp_10_reg_867 <= tmp_10_fu_435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2))) begin
        tmp_12_reg_871 <= tmp_12_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1))) begin
        tmp_9_reg_863 <= tmp_9_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op136_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        tmp_len_fu_214 <= tmp_len_1_fu_716_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == app_file_infos_V_empty_n) & (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == app_file_infos_V_empty_n)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & ((1'd1 == reset_phi_fu_297_p4) | (1'd1 == empty_n_4_fu_407_p1)))))) begin
        app_file_infos_V_read = 1'b1;
    end else begin
        app_file_infos_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (reset_reg_293 == 1'd0) & (1'd0 == empty_n_4_reg_854) & (state_reg_281 == 1'd1) & (1'd1 == empty_n_3_reg_881))) begin
        app_input_data_V_data_V_blk_n = app_input_data_V_data_V_full_n;
    end else begin
        app_input_data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (reset_reg_293 == 1'd0) & (1'd0 == empty_n_4_reg_854) & (state_reg_281 == 1'd1) & (1'd1 == empty_n_3_reg_881))) begin
        app_input_data_V_eop_blk_n = app_input_data_V_eop_full_n;
    end else begin
        app_input_data_V_eop_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op136_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        app_input_data_V_len1_update = 1'b1;
    end else begin
        app_input_data_V_len1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (reset_reg_293 == 1'd0) & (1'd0 == empty_n_4_reg_854) & (state_reg_281 == 1'd1) & (1'd1 == empty_n_3_reg_881))) begin
        app_input_data_V_len_blk_n = app_input_data_V_len_full_n;
    end else begin
        app_input_data_V_len_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd1 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_5_fu_510_p2) & (1'b1 == (device_dram_read_req_V_num_full_n & device_dram_read_req_V_addr_full_n)))) begin
        device_dram_read_req_V_num1_update = 1'b1;
    end else begin
        device_dram_read_req_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if (((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & ((1'd1 == reset_phi_fu_297_p4) | (1'd1 == empty_n_4_fu_407_p1))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd1 == state_phi_fu_285_p4) & (1'b1 == ap_enable_reg_pp0_iter0))) & (1'b1 == (device_dram_read_resp_V_last_empty_n & device_dram_read_resp_V_data_V_empty_n)))) begin
        device_dram_read_resp_V_last0_update = 1'b1;
    end else begin
        device_dram_read_resp_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if ((ap_condition_71 == 1'b1)) begin
        if ((ap_condition_84 == 1'b1)) begin
            reset_3_phi_fu_352_p16 = 1'd0;
        end else if (((reset_reg_293 == 1'd1) | (empty_n_4_reg_854 == 1'd1))) begin
            reset_3_phi_fu_352_p16 = p_reset_1_fu_769_p2;
        end else begin
            reset_3_phi_fu_352_p16 = ap_phi_precharge_reg_pp0_iter1_reset_3_reg_347;
        end
    end else begin
        reset_3_phi_fu_352_p16 = ap_phi_precharge_reg_pp0_iter1_reset_3_reg_347;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == reset_dram_helper_app_V_empty_n))) begin
        reset_dram_helper_app_V_read = 1'b1;
    end else begin
        reset_dram_helper_app_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        reset_phi_fu_297_p4 = reset_3_phi_fu_352_p16;
    end else begin
        reset_phi_fu_297_p4 = reset_reg_293;
    end
end

always @ (*) begin
    if ((ap_condition_71 == 1'b1)) begin
        if ((ap_condition_84 == 1'b1)) begin
            state_8_phi_fu_321_p16 = brmerge_fu_683_p2;
        end else if (((reset_reg_293 == 1'd1) | (empty_n_4_reg_854 == 1'd1))) begin
            state_8_phi_fu_321_p16 = 1'd0;
        end else begin
            state_8_phi_fu_321_p16 = ap_phi_precharge_reg_pp0_iter1_state_8_reg_315;
        end
    end else begin
        state_8_phi_fu_321_p16 = ap_phi_precharge_reg_pp0_iter1_state_8_reg_315;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        state_phi_fu_285_p4 = state_8_phi_fu_321_p16;
    end else begin
        state_phi_fu_285_p4 = state_reg_281;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == app_input_data_V_len1_status) & (1'b1 == ap_predicate_op136_write_state3));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == app_input_data_V_len1_status) & (1'b1 == ap_predicate_op136_write_state3));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_enable_reg_pp0_iter1) & (1'b0 == app_input_data_V_len1_status) & (1'b1 == ap_predicate_op136_write_state3));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((1'b0 == app_input_data_V_len1_status) & (1'b1 == ap_predicate_op136_write_state3));
end

always @ (*) begin
    ap_condition_154 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_condition_471 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_condition_531 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == reset_phi_fu_297_p4) & (1'd0 == empty_n_4_fu_407_p1) & (1'b1 == ap_enable_reg_pp0_iter0));
end

always @ (*) begin
    ap_condition_533 = ((1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd1 == tmp_9_fu_429_p2));
end

always @ (*) begin
    ap_condition_537 = ((1'd1 == state_phi_fu_285_p4) & (1'd0 == tmp_5_fu_510_p2) & (1'd1 == full_n_nbwrite_fu_250_p5));
end

always @ (*) begin
    ap_condition_547 = ((1'd0 == state_phi_fu_285_p4) & (1'd1 == empty_n_fu_411_p1) & (1'd0 == tmp_9_fu_429_p2) & (1'd0 == tmp_10_fu_435_p2) & (1'd1 == tmp_12_fu_441_p2));
end

always @ (*) begin
    ap_condition_71 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0));
end

always @ (*) begin
    ap_condition_84 = ((reset_reg_293 == 1'd0) & (1'd0 == empty_n_4_reg_854) & (state_reg_281 == 1'd1) & (1'd1 == empty_n_3_reg_881));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_precharge_reg_pp0_iter0_reset_1_reg_305 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_reset_3_reg_347 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_state_8_reg_315 = 'bx;

always @ (*) begin
    ap_predicate_op136_write_state3 = ((reset_reg_293 == 1'd0) & (1'd0 == empty_n_4_reg_854) & (state_reg_281 == 1'd1) & (1'd1 == empty_n_3_reg_881));
end

assign ap_ready = 1'b0;

assign app_data_len_cast_fu_694_p1 = app_data_len_fu_690_p1;

assign app_data_len_fu_690_p1 = length_V_1_fu_226[5:0];

assign app_input_data_V_data_V_din = tmp_data_V_reg_885;

assign app_input_data_V_data_V_write = app_input_data_V_len1_update;

assign app_input_data_V_eop_din = (finish_issuing_fu_218 & p_not_not_fu_725_p2);

assign app_input_data_V_eop_write = app_input_data_V_len1_update;

assign app_input_data_V_len1_status = (app_input_data_V_data_V_full_n & app_input_data_V_len_full_n & app_input_data_V_eop_full_n);

assign app_input_data_V_len_din = ((brmerge_fu_683_p2[0:0] === 1'b1) ? tmp_len_fu_214 : p_app_data_len_cast_fu_712_p1);

assign app_input_data_V_len_write = app_input_data_V_len1_update;

assign brmerge_fu_683_p2 = (p_not_fu_671_p2 | finish_issuing_6_not_fu_677_p2);

assign device_dram_read_req_V_addr_din = l_addr_V_1_fu_210;

assign device_dram_read_req_V_addr_write = device_dram_read_req_V_num1_update;

assign device_dram_read_req_V_num_din = tmp_num_fu_563_p3;

assign device_dram_read_req_V_num_write = device_dram_read_req_V_num1_update;

assign device_dram_read_resp_V_data_V_read = device_dram_read_resp_V_last0_update;

assign device_dram_read_resp_V_last_read = device_dram_read_resp_V_last0_update;

assign empty_n_3_fu_642_p1 = grp_nbread_fu_260_p3_0;

assign empty_n_4_fu_407_p1 = reset_dram_helper_app_V_empty_n;

assign empty_n_fu_411_p1 = app_file_infos_V_empty_n;

assign finish_issuing_1_fu_584_p2 = (tmp_7_fu_527_p2 ^ 1'd1);

assign finish_issuing_6_not_fu_677_p2 = (finish_issuing_fu_218 ^ 1'd1);

assign full_n_nbwrite_fu_250_p5 = (device_dram_read_req_V_num_full_n & device_dram_read_req_V_addr_full_n);

assign grp_nbread_fu_260_p3_0 = (device_dram_read_resp_V_last_empty_n & device_dram_read_resp_V_data_V_empty_n);

assign i_op_assign_fu_594_p3 = {{tmp_num_fu_563_p3}, {6'd0}};

assign l_addr_V_fu_494_p3 = {{tmp_2_fu_490_p1}, {12'd0}};

assign length_V_fu_476_p1 = app_file_infos_V_dout;

assign length_left_1_fu_618_p1 = p_2_fu_576_p3;

assign length_left_2_fu_462_p1 = r_V_fu_454_p3;

assign next_l_addr_V_fu_606_p2 = (l_addr_V_1_fu_210 + tmp_s_fu_602_p1);

assign next_length_left_V_fu_537_p2 = ($signed(37'd137438949376) + $signed(tmp_fu_533_p1));

assign next_num_issued_fu_612_p2 = (num_issued_fu_222 + tmp_8_fu_590_p1);

assign not_s_fu_763_p2 = (tmp_4_fu_757_p2 ^ 1'd1);

assign num_read_1_fu_665_p2 = (32'd1 + num_read_fu_230);

assign p_2_fu_576_p3 = ((tmp_7_fu_527_p2[0:0] === 1'b1) ? next_length_left_V_fu_537_p2 : 37'd0);

assign p_app_data_len_cast_fu_712_p1 = p_app_data_len_fu_704_p3;

assign p_app_data_len_fu_704_p3 = ((tmp_11_fu_698_p2[0:0] === 1'b1) ? 7'd64 : app_data_len_cast_fu_694_p1);

assign p_not_fu_671_p2 = ((num_issued_fu_222 != num_read_1_fu_665_p2) ? 1'b1 : 1'b0);

assign p_not_not_fu_725_p2 = (p_not_fu_671_p2 ^ 1'd1);

assign p_reset_1_fu_769_p2 = (ap_phi_precharge_reg_pp0_iter1_reset_1_reg_305 & not_s_fu_763_p2);

assign p_s_fu_776_p3 = ((tmp_4_fu_757_p2[0:0] === 1'b1) ? 32'd0 : reset_cnt_1_fu_751_p2);

assign r_V_fu_454_p3 = {{tmp_13_fu_450_p1}, {app_file_infos_V_dout}};

assign read_info_cnt_1_fu_422_p2 = (read_info_cnt_fu_234 + 32'd1);

assign read_req_num_cast_fu_553_p4 = {{tmp_3_fu_547_p2[12:6]}};

assign reset_cnt_1_fu_751_p2 = (reset_cnt_fu_202 + 32'd1);

assign tmp_10_fu_435_p2 = ((read_info_cnt_1_fu_422_p2 == 32'd2) ? 1'b1 : 1'b0);

assign tmp_11_fu_698_p2 = ((app_data_len_fu_690_p1 == 6'd0) ? 1'b1 : 1'b0);

assign tmp_12_fu_441_p2 = ((read_info_cnt_1_fu_422_p2 == 32'd3) ? 1'b1 : 1'b0);

assign tmp_13_fu_450_p1 = length_V_1_fu_226[4:0];

assign tmp_1_fu_543_p1 = length_left_fu_206[13:0];

assign tmp_2_fu_490_p1 = app_file_infos_V_dout[23:0];

assign tmp_3_fu_547_p2 = (14'd63 + tmp_1_fu_543_p1);

assign tmp_4_fu_757_p2 = ((reset_cnt_1_fu_751_p2 == 32'd2048) ? 1'b1 : 1'b0);

assign tmp_5_fu_510_p2 = ((length_left_fu_206 == 64'd0) ? 1'b1 : 1'b0);

assign tmp_7_fu_527_p2 = ((length_left_fu_206 > 64'd4096) ? 1'b1 : 1'b0);

assign tmp_8_fu_590_p1 = tmp_num_fu_563_p3;

assign tmp_9_fu_429_p2 = ((read_info_cnt_fu_234 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_fu_533_p1 = length_left_fu_206[36:0];

assign tmp_len_1_fu_716_p3 = ((brmerge_fu_683_p2[0:0] === 1'b1) ? tmp_len_fu_214 : p_app_data_len_cast_fu_712_p1);

assign tmp_num_fu_563_p3 = ((tmp_7_fu_527_p2[0:0] === 1'b1) ? 7'd64 : read_req_num_cast_fu_553_p4);

assign tmp_s_fu_602_p1 = i_op_assign_fu_594_p3;

always @ (posedge ap_clk) begin
    length_left_fu_206[63:37] <= 27'b000000000000000000000000000;
end

endmodule //dram_helper_app
